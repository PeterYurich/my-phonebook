{"version":3,"file":"static/js/644.6933f085.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://my-phonebook/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","webpack://my-phonebook/./src/pages/PhonebookPage/PhonebookPage.module.scss?9dc2","pages/PhonebookPage/Phonebook.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts, selectContactsStatus } from 'redux/selectors';\r\nimport { addContact } from 'redux/contacts/contactsOperations';\r\n\r\nimport { selectAuth } from 'redux/selectors';\r\n\r\nimport * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { ContactEmergencyOutlined } from '@mui/icons-material';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { Notify } from 'notiflix';\r\n// import LoaderBlock from 'components/Loaders/LoaderBlock';\r\nimport { Blocks } from 'react-loader-spinner';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const contacts = useSelector(selectContacts);\r\n  const contactsStatus = useSelector(selectContactsStatus);\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector(selectAuth);\r\n\r\n  const inputController = evt => {\r\n    const { name: inputName, value: inputValue } = evt.target;\r\n\r\n    switch (inputName) {\r\n      case 'name':\r\n        setName(inputValue);\r\n        break;\r\n      case 'phone':\r\n        setPhone(inputValue);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (!authData.isLoggedIn) {\r\n      alert(\r\n        'Sign up to start creating your contact list or log in if you have your own account'\r\n      );\r\n    }\r\n    if (\r\n      contacts.find(person => person.name.toLowerCase() === name.toLowerCase())\r\n    ) {\r\n      alert(`A contact with the name \"${name}\" already exists!`);\r\n      return;\r\n    }\r\n    if (name === '' || phone === '') {\r\n      alert('Fill required fields, please!');\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, phone }));\r\n    setName('');\r\n    setPhone('');\r\n    Notify.success(`${name} has added to you phonebook!`);\r\n  };\r\n  const theme = createTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            // borderBottom: '2px solid grey',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <ContactEmergencyOutlined />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Create a contact\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              // autoFocus\r\n              onChange={inputController}\r\n              value={name}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Phone\"\r\n              type=\"phone\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              onChange={inputController}\r\n              value={phone}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              {contactsStatus === 'adding' ? (\r\n                // <div>\r\n                  <Blocks height={25} />\r\n                // </div>\r\n              ) : (\r\n                'save'\r\n              )}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { setFilter } from 'redux/contacts/filterSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectFilter } from 'redux/selectors';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectFilter);\r\n\r\n  const onChange = evt => {\r\n    dispatch(setFilter(evt.target.value.trim()));\r\n  };\r\n\r\n  return (\r\n    <div\r\n    // sx={{\r\n    //   marginTop: 8,\r\n    //   display: 'flex',\r\n    //   flexDirection: 'column',\r\n    //   alignItems: 'center',\r\n    // }}\r\n    >\r\n      <TextField\r\n        label=\"Filter by name\"\r\n        margin=\"normal\"\r\n        type=\"filter\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></TextField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactList_contact__WT7cv\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  selectContacts,\r\n  visibleContacts,\r\n  selectContactsStatus,\r\n} from 'redux/selectors';\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n} from 'redux/contacts/contactsOperations';\r\n\r\nimport css from './ContactList.module.scss';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport { Notify } from 'notiflix';\r\n\r\nimport LoaderBlock from 'components/Loaders/LoaderBlock';\r\nimport { RingLoader } from 'react-spinners';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contactsStatus = useSelector(selectContactsStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(selectContacts);\r\n  const handleDelete = (id, name) => {\r\n    dispatch(deleteContact(id));\r\n    Notify.info(`${name} is deleted from you phonebook successfully!`);\r\n  };\r\n\r\n  const toRender = useSelector(visibleContacts);\r\n\r\n  return (\r\n    <ul>\r\n      {contactsStatus === 'fetching' && <LoaderBlock />}\r\n      {/* {contacts.error && <div>Oops! A mistake is happend. Try again!</div>} */}\r\n      {!contacts.isLoading &&\r\n        toRender.map(person => {\r\n          return (\r\n            <li className={css.contact} key={person._id}>\r\n              <Typography\r\n                sx={{\r\n                  width: '300px',\r\n                }}\r\n              >\r\n                {person.name}: {person.number}\r\n              </Typography>\r\n\r\n              {contactsStatus === person.id ? (\r\n                <RingLoader size={32} />\r\n              ) : (\r\n                <IconButton\r\n                  sx={{ visibility: 'none' }}\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={() => handleDelete(person._id, person.name)}\r\n                >\r\n                  <DeleteOutlinedIcon />\r\n                </IconButton>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"PhonebookPage_phonebook__205OB\",\"contactForm\":\"PhonebookPage_contactForm__Y7HaH\",\"contactsTitleLine\":\"PhonebookPage_contactsTitleLine__oWAWn\"};","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport css from './PhonebookPage.module.scss'\r\n\r\nimport { Typography } from '@mui/material';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={css.phonebook}>\r\n      <div className={css.contactForm}>\r\n        <ContactForm ></ContactForm>\r\n      </div>\r\n\r\n      <div className={css.contactsTitleLine}>\r\n        <Filter ></Filter>\r\n        <Typography component=\"h3\" variant=\"h5\">\r\n          Contacts:\r\n        </Typography>\r\n      </div>\r\n      <ContactList></ContactList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n"],"names":["useState","name","setName","phone","setPhone","contacts","useSelector","selectContacts","contactsStatus","selectContactsStatus","dispatch","useDispatch","authData","selectAuth","inputController","evt","target","inputName","inputValue","value","theme","createTheme","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","ContactEmergencyOutlined","Typography","variant","onSubmit","preventDefault","isLoggedIn","alert","find","person","toLowerCase","addContact","Notify","noValidate","mt","TextField","margin","required","fullWidth","id","label","onChange","type","Button","mb","height","filter","selectFilter","setFilter","trim","useEffect","fetchContacts","toRender","visibleContacts","LoaderBlock","isLoading","map","className","css","width","number","RingLoader","size","IconButton","visibility","onClick","_id","deleteContact","DeleteOutlined"],"sourceRoot":""}